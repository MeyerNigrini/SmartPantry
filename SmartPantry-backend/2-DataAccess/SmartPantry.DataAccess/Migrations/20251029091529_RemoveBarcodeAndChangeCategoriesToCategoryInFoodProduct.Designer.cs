// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartPantry.DataAccess.Contexts;

#nullable disable

namespace SmartPantry.DataAccess.Migrations
{
    [DbContext(typeof(SmartPantryDbContext))]
    [Migration("20251029091529_RemoveBarcodeAndChangeCategoriesToCategoryInFoodProduct")]
    partial class RemoveBarcodeAndChangeCategoriesToCategoryInFoodProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartPantry.Core.Entities.FoodProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brands")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("FoodProduct", (string)null);
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.MealSuggestionEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SuggestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("MealSuggestion", (string)null);
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.MealSuggestionFoodProductEntity", b =>
                {
                    b.Property<Guid>("MealSuggestionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("MealSuggestionID", "FoodProductID");

                    b.HasIndex("FoodProductID");

                    b.ToTable("MealSuggestionFoodProduct", (string)null);
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.FoodProductEntity", b =>
                {
                    b.HasOne("SmartPantry.Core.Entities.UserEntity", "User")
                        .WithMany("FoodProducts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.MealSuggestionEntity", b =>
                {
                    b.HasOne("SmartPantry.Core.Entities.UserEntity", "User")
                        .WithMany("MealSuggestions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.MealSuggestionFoodProductEntity", b =>
                {
                    b.HasOne("SmartPantry.Core.Entities.FoodProductEntity", "FoodProduct")
                        .WithMany("MealSuggestionFoodProducts")
                        .HasForeignKey("FoodProductID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SmartPantry.Core.Entities.MealSuggestionEntity", "MealSuggestion")
                        .WithMany("MealSuggestionFoodProducts")
                        .HasForeignKey("MealSuggestionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FoodProduct");

                    b.Navigation("MealSuggestion");
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.FoodProductEntity", b =>
                {
                    b.Navigation("MealSuggestionFoodProducts");
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.MealSuggestionEntity", b =>
                {
                    b.Navigation("MealSuggestionFoodProducts");
                });

            modelBuilder.Entity("SmartPantry.Core.Entities.UserEntity", b =>
                {
                    b.Navigation("FoodProducts");

                    b.Navigation("MealSuggestions");
                });
#pragma warning restore 612, 618
        }
    }
}
